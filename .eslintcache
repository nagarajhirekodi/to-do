[{"E:\\coding\\Fractal\\react-to-do\\src\\index.js":"1","E:\\coding\\Fractal\\react-to-do\\src\\App.js":"2","E:\\coding\\Fractal\\react-to-do\\src\\reportWebVitals.js":"3","E:\\coding\\Fractal\\react-to-do\\src\\components\\Todo.js":"4","E:\\coding\\Fractal\\react-to-do\\src\\Store.js":"5","E:\\coding\\Fractal\\react-to-do\\src\\reducers\\Reducers.js":"6","E:\\coding\\Fractal\\react-to-do\\src\\actions\\Actions.js":"7","E:\\coding\\Fractal\\react-to-do\\src\\components\\Modal.js":"8","E:\\coding\\Fractal\\react-to-do\\src\\components\\TodoComponent.js":"9","E:\\coding\\Fractal\\react-to-do\\src\\components\\TodoForm.js":"10"},{"size":660,"mtime":1610863545146,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1610889771002,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"size":3661,"mtime":1610878803242,"results":"15","hashOfConfig":"12"},{"size":217,"mtime":1610811686944,"results":"16","hashOfConfig":"12"},{"size":700,"mtime":1610909496194,"results":"17","hashOfConfig":"12"},{"size":127,"mtime":1610909551782,"results":"18","hashOfConfig":"12"},{"size":441,"mtime":1610937266613,"results":"19","hashOfConfig":"12"},{"size":4136,"mtime":1610937266613,"results":"20","hashOfConfig":"12"},{"size":3092,"mtime":1610938243389,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1vkezyg",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\coding\\Fractal\\react-to-do\\src\\index.js",[],["45","46"],"E:\\coding\\Fractal\\react-to-do\\src\\App.js",[],"E:\\coding\\Fractal\\react-to-do\\src\\reportWebVitals.js",[],"E:\\coding\\Fractal\\react-to-do\\src\\components\\Todo.js",["47"],"import React from \"react\";\r\nimport \"../App.css\";\r\n\r\n// component to display the to-do\r\nfunction Todo({\r\n  todo,\r\n  index,\r\n  completeTodo,\r\n  uncompleteTodo,\r\n  removeTodo,\r\n  isUpdateTodo,\r\n  updateTodo,\r\n  isUpdate,\r\n}) {\r\n  if (isUpdate) {\r\n    return (\r\n      <div>\r\n        <TodoForm addTodo={updateTodo} index={index} todo={todo} />\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div\r\n      className=\"todo\"\r\n      style={{ textDecoration: todo.isCompleted ? \"line-through\" : \"\" }}\r\n    >\r\n      {todo.text}\r\n      <div>\r\n        <button\r\n          onClick={() =>\r\n            todo.isCompleted ? uncompleteTodo(index) : completeTodo(index)\r\n          }\r\n        >\r\n          {todo.isCompleted ? \"UnComplete\" : \"Complete\"}\r\n        </button>\r\n        <button\r\n          style={{ margin: \"0 10px\" }}\r\n          onClick={() => isUpdateTodo(index)}\r\n        >\r\n          Edit\r\n        </button>\r\n        <button onClick={() => removeTodo(index)}>x</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// component to create a to-do\r\nfunction TodoForm({ addTodo, index, todo }) {\r\n  const [value, setValue] = React.useState(\"\");\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!value) return;\r\n    if (todo) {\r\n      addTodo(index, value);\r\n    } else {\r\n      addTodo(value);\r\n    }\r\n    setValue(\"\");\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (todo) {\r\n      setValue(todo.text);\r\n    }\r\n  }, [todo]);\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"todo\">\r\n      <input\r\n        type=\"text\"\r\n        className=\"input\"\r\n        value={value}\r\n        onChange={(e) => setValue(e.target.value)}\r\n      />\r\n      <button style={{ marginLeft: 20 }} disabled={!value}>{todo ? \"Update\" : \"Create\"}</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nfunction TodoApp(props) {\r\n  const [todos, setTodos] = React.useState([\r\n    { text: \"Learn about React\", isCompleted: false, isUpdate: false },\r\n    { text: \"Build todo app\", isCompleted: false, isUpdate: false },\r\n    { text: \"Upload it to GitHub :)\", isCompleted: false, isUpdate: false },\r\n  ]);\r\n\r\n  //method to add a to-do\r\n  const addTodo = (text) => {\r\n    const newTodos = [...todos, { text }];\r\n    setTodos(newTodos);\r\n  };\r\n\r\n  //method to mark the to-do as completed\r\n  const completeTodo = (index) => {\r\n    const newTodos = [...todos];\r\n    newTodos[index].isCompleted = true;\r\n    setTodos(newTodos);\r\n  };\r\n\r\n  //method to mark the to-do as completed\r\n  const uncompleteTodo = (index) => {\r\n    const newTodos = [...todos];\r\n    newTodos[index].isCompleted = false;\r\n    setTodos(newTodos);\r\n  };\r\n\r\n  //method to delete a to-do\r\n  const removeTodo = (index) => {\r\n    const newTodos = [...todos];\r\n    newTodos.splice(index, 1);\r\n    setTodos(newTodos);\r\n  };\r\n\r\n  //check whether a todo is editable\r\n  const isUpdateTodo = (index) => {\r\n    const newTodos = [...todos];\r\n    newTodos[index].isUpdate = true;\r\n    setTodos(newTodos);\r\n  };\r\n\r\n  //method to update a to-do\r\n  const updateTodo = (index, text) => {\r\n    const newTodos = [...todos];\r\n    newTodos[index] = { text };\r\n    setTodos(newTodos);\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"todo-list\">\r\n        {todos.map((todo, index) => (\r\n          <Todo\r\n            key={index}\r\n            index={index}\r\n            todo={todo}\r\n            completeTodo={completeTodo}\r\n            uncompleteTodo={uncompleteTodo}\r\n            removeTodo={removeTodo}\r\n            isUpdateTodo={isUpdateTodo}\r\n            updateTodo={updateTodo}\r\n            isUpdate={todo.isUpdate}\r\n          />\r\n        ))}\r\n        <TodoForm addTodo={addTodo} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoApp;\r\n",["48","49"],"E:\\coding\\Fractal\\react-to-do\\src\\Store.js",[],"E:\\coding\\Fractal\\react-to-do\\src\\reducers\\Reducers.js",[],"E:\\coding\\Fractal\\react-to-do\\src\\actions\\Actions.js",[],"E:\\coding\\Fractal\\react-to-do\\src\\components\\Modal.js",[],"E:\\coding\\Fractal\\react-to-do\\src\\components\\TodoComponent.js",[],"E:\\coding\\Fractal\\react-to-do\\src\\components\\TodoForm.js",["50","51","52","53"],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":3,"column":8,"nodeType":"60","messageId":"61","endLine":3,"endColumn":13},{"ruleId":"54","replacedBy":"62"},{"ruleId":"56","replacedBy":"63"},{"ruleId":"58","severity":1,"message":"64","line":2,"column":10,"nodeType":"60","messageId":"61","endLine":2,"endColumn":21},{"ruleId":"65","severity":1,"message":"66","line":15,"column":29,"nodeType":"67","messageId":"68","endLine":15,"endColumn":31},{"ruleId":"69","severity":1,"message":"70","line":28,"column":6,"nodeType":"71","endLine":28,"endColumn":37,"suggestions":"72"},{"ruleId":"69","severity":1,"message":"73","line":28,"column":19,"nodeType":"74","endLine":28,"endColumn":36},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"no-unused-vars","'Modal' is defined but never used.","Identifier","unusedVar",["75"],["76"],"'useDispatch' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'index', 'todo.category', 'todo.description', 'todo.text', and 'value'. Either include them or remove the dependency array. You can also do a functional update 'setValue(v => ...)' if you only need 'value' in the 'setValue' call.","ArrayExpression",["77"],"React Hook React.useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","LogicalExpression","no-global-assign","no-unsafe-negation",{"desc":"78","fix":"79"},"Update the dependencies array to be: [bucketList, index, todo.category, todo.description, todo.text, value]",{"range":"80","text":"81"},[751,782],"[bucketList, index, todo.category, todo.description, todo.text, value]"]